{"version":3,"file":"httpHelpers.cjs.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,MAAM,8BAA4B;;;ACAlC,MAAM,qCAA4B;;;ACAlC,MAAM,iCAA4B;;;;;;;;;ACAlC;AACA;AACA;AAEA,MAAMG,GAAG,GAAGF,qCAAA,CAAmB,cAAnB,CAAZ;AACAE,GAAG,CAACE,QAAJ,CAAaH,6CAAb;AAWA,IAAIK,MAAM,GAAG,eAAb;AACA,IAAIC,SAAS,GAAG,EAAhB,EAEA;;AACO,MAAMC,iBAAiB,GAAG,WAA1B;AACA,MAAMC,sBAAsB,GAAG,cAA/B;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAgD;EACrDJ,SAAS,GAAGI,UAAZ;AACD;AAEM,SAASC,cAAT,GAAgC;EACrCL,SAAS,GAAG,EAAZ;AACD;AAEM,SAASM,YAAT,GAAgC;EACrC,OAAON,SAAP;AACD;AAEM,SAASO,SAAT,CAAmBC,OAAnB,EAA0C;EAC/CT,MAAM,GAAGS,OAAT;AACD;AAEM,SAASC,WAAT,GAA6B;EAClCV,MAAM,GAAG,eAAT;AACD;AAEM,SAASW,SAAT,GAA6B;EAClC,OAAOX,MAAP;AACD,EAED;;AAEO,SAASY,WAAT,CAAqBC,KAArB,EAA0C;EAC/CjB,GAAG,CAACE,QAAJ,CAAae,KAAb;AACD;;AAED,SAASC,gBAAT,GAAoD;EAClD,MAAMC,OAAO,GAAG,EAAhB;EACA,IAAIf,MAAJ,EAAYe,OAAO,CAACb,iBAAD,CAAP,GAA6BF,MAA7B;EACZ,IAAIC,SAAJ,EAAec,OAAO,CAACZ,sBAAD,CAAP,GAAkCF,SAAlC;EACf,OAAOc,OAAP;AACD;;AAED,SAASC,gBAAT,CAA0BC,QAA1B,EAA8C;EAC5CrB,GAAG,CAACsB,IAAJ,qBAAsBD,QAAQ,CAACE,MAA/B,cAAyCF,QAAQ,CAACG,UAAlD;EACAxB,GAAG,CAACsB,IAAJ,gBAAiBD,QAAQ,CAACI,GAA1B;AACD;;AAEM,MAAMC,cAAc,GAAG,CAAIC,EAAJ,EAAgBC,OAAhB,KAAoD;EAChF,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAe,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAClD,MAAMC,EAAE,GAAGC,UAAU,CAAC,MAAM;MAC1BC,YAAY,CAACF,EAAD,CAAZ;MACAD,MAAM,CAAC,IAAII,KAAJ,wBAA0BT,EAA1B,QAAD,CAAN;IACD,CAHoB,EAGlBA,EAHkB,CAArB;EAID,CALe,CAAhB;EAMA,OAAOG,OAAO,CAACO,IAAR,CAAgB,CAACT,OAAD,EAAUC,OAAV,CAAhB,CAAP;AACD,CARM;AAUA,MAAMS,GAAG,GAAG,gBAAUb,GAAV,EAAyF;EAAA,IAAlEc,QAAkE,uEAA1C,EAA0C;EAAA,IAAtCC,aAAsC,uEAAP,EAAO;EAC1G,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,MADe;IAErBvB,OAAO,EAAE;EAFY,CAAvB;;EAIA,IAAIqB,aAAa,CAACG,SAAlB,EAA6B;IAC3BF,cAAc,CAACtB,OAAf,mCAA8BsB,cAAc,CAACtB,OAA7C,GAAyDD,gBAAgB,EAAzE;EACD;;EACD,MAAM0B,OAAO,GAAG/C,+BAAK,CAAC4C,cAAD,EAAiBF,QAAjB,EAA2B;IAAEM,MAAM,EAAE;EAAV,CAA3B,CAArB;EACA,MAAMxB,QAAQ,GAAG,MAAMyB,KAAK,CAACrB,GAAD,EAAMmB,OAAN,CAA5B;;EACA,IAAIvB,QAAQ,CAAC0B,EAAb,EAAiB;IACf,OAAO1B,QAAQ,CAAC2B,IAAT,EAAP;EACD;;EACD5B,gBAAgB,CAACC,QAAD,CAAhB;EACA,MAAMA,QAAN;AACD,CAfM;AAiBA,MAAM4B,IAAI,GAAG,UAAIxB,GAAJ,EAAoG;EAAA,IAAnFyB,IAAmF,uEAAtE,EAAsE;EAAA,IAAlEX,QAAkE,uEAA1C,EAA0C;EAAA,IAAtCC,aAAsC,uEAAP,EAAO;EACtH,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,MADe;IAErBvB,OAAO,EAAE;MACP,gBAAgB;IADT;EAFY,CAAvB;;EAMA,IAAIqB,aAAa,CAACG,SAAlB,EAA6B;IAC3BF,cAAc,CAACtB,OAAf,mCAA8BsB,cAAc,CAACtB,OAA7C,GAAyDD,gBAAgB,EAAzE;EACD;;EACD,MAAM0B,OAAO,GAAG/C,+BAAK,CAAC4C,cAAD,EAAiBF,QAAjB,EAA2B;IAAEM,MAAM,EAAE;EAAV,CAA3B,CAArB,CAVsH,CAYtH;EACA;;EACA,IAAIL,aAAa,CAACW,gBAAlB,EAAoC;IAClC;IACA;IACA;IACAP,OAAO,CAACQ,IAAR,GAAeF,IAAf,CAJkC,CAKlC;;IACA,IAAIN,OAAO,CAACzB,OAAR,CAAgB,cAAhB,MAAoC,iCAAxC,EAA2E,OAAOyB,OAAO,CAACzB,OAAR,CAAgB,cAAhB,CAAP;EAC5E,CAPD,MAOO;IACLyB,OAAO,CAACQ,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAf;EACD;;EAED,OAAOxB,cAAc,CAClBc,aAAa,CAACX,OAAf,IAAqC,KADlB,EAEnBiB,KAAK,CAACrB,GAAD,EAAMmB,OAAN,CAAL,CAAoBW,IAApB,CAA0BlC,QAAD,IAAc;IACrC,IAAIA,QAAQ,CAAC0B,EAAb,EAAiB;MACf,OAAO1B,QAAQ,CAAC2B,IAAT,EAAP;IACD;;IACD5B,gBAAgB,CAACC,QAAD,CAAhB;IACA,MAAMA,QAAN;EACD,CAND,CAFmB,CAArB;AAUD,CAnCM;AAqCA,MAAMmC,KAAK,GAAG,gBAAU/B,GAAV,EAA0G;EAAA,IAAnFyB,IAAmF,uEAAtE,EAAsE;EAAA,IAAlEX,QAAkE,uEAA1C,EAA0C;EAAA,IAAtCC,aAAsC,uEAAP,EAAO;EAC7H,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,MADe;IAErBvB,OAAO,EAAE;MACP,gBAAgB;IADT;EAFY,CAAvB,CAD6H,CAO7H;EACA;EACA;;EACA,IAAIqB,aAAa,CAACG,SAAlB,EAA6B;IAC3BF,cAAc,CAACtB,OAAf,mCAA8BsB,cAAc,CAACtB,OAA7C,GAAyDD,gBAAgB,EAAzE;EACD;;EACD,MAAM0B,OAAO,GAAG/C,+BAAK,CAAC4C,cAAD,EAAiBF,QAAjB,EAA2B;IAAEM,MAAM,EAAE;EAAV,CAA3B,CAArB,CAb6H,CAc7H;EACA;;EACA,IAAIL,aAAa,CAACW,gBAAlB,EAAoC;IAClC;IACA;IACA;IACAP,OAAO,CAACQ,IAAR,GAAeF,IAAf,CAJkC,CAKlC;;IACA,IAAIN,OAAO,CAACzB,OAAR,CAAgB,cAAhB,MAAoC,iCAAxC,EAA2E,OAAOyB,OAAO,CAACzB,OAAR,CAAgB,cAAhB,CAAP;EAC5E,CAPD,MAOO;IACLyB,OAAO,CAACQ,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAf;EACD;;EACD,MAAM7B,QAAQ,GAAG,MAAMyB,KAAK,CAACrB,GAAD,EAAMmB,OAAN,CAA5B;;EACA,IAAIvB,QAAQ,CAAC0B,EAAb,EAAiB;IACf,OAAO1B,QAAQ,CAAC2B,IAAT,EAAP;EACD;;EACD5B,gBAAgB,CAACC,QAAD,CAAhB;EACA,MAAMA,QAAN;AACD,CAhCM;AAkCA,MAAMoC,MAAM,GAAG,gBAAUhC,GAAV,EAA0G;EAAA,IAAnFyB,IAAmF,uEAAtE,EAAsE;EAAA,IAAlEX,QAAkE,uEAA1C,EAA0C;EAAA,IAAtCC,aAAsC,uEAAP,EAAO;EAC9H,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,MADe;IAErBvB,OAAO,EAAE;MACP,gBAAgB;IADT;EAFY,CAAvB,CAD8H,CAO9H;EACA;EACA;;EACA,IAAIqB,aAAa,CAACG,SAAlB,EAA6B;IAC3BF,cAAc,CAACtB,OAAf,mCAA8BsB,cAAc,CAACtB,OAA7C,GAAyDD,gBAAgB,EAAzE;EACD;;EACD,MAAM0B,OAAO,GAAG/C,+BAAK,CAAC4C,cAAD,EAAiBF,QAAjB,EAA2B;IAAEM,MAAM,EAAE;EAAV,CAA3B,CAArB;;EACA,IAAIL,aAAa,CAACW,gBAAlB,EAAoC;IAClC;IACA;IACA;IACAP,OAAO,CAACQ,IAAR,GAAeF,IAAf,CAJkC,CAKlC;;IACA,IAAIN,OAAO,CAACzB,OAAR,CAAgB,cAAhB,MAAoC,iCAAxC,EAA2E,OAAOyB,OAAO,CAACzB,OAAR,CAAgB,cAAhB,CAAP;EAC5E,CAPD,MAOO;IACLyB,OAAO,CAACQ,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAf;EACD;;EACD,MAAM7B,QAAQ,GAAG,MAAMyB,KAAK,CAACrB,GAAD,EAAMmB,OAAN,CAA5B;;EACA,IAAIvB,QAAQ,CAAC0B,EAAb,EAAiB;IACf,OAAO1B,QAAQ,CAAC2B,IAAT,EAAP;EACD;;EACD5B,gBAAgB,CAACC,QAAD,CAAhB;EACA,MAAMA,QAAN;AACD,CA9BM;AAgCA,MAAMqC,qBAAqB,GAAG,CAACb,MAAD,EAAiBc,UAAjB,MAA0C;EAC7EC,OAAO,EAAE,KADoE;EAE7Ef,MAF6E;EAG7EZ,EAAE,EAAE,EAHyE;EAI7E4B,MAAM,EAAEF;AAJqE,CAA1C,CAA9B;AAOA,MAAMG,WAAW,GAAG,UAAIrC,GAAJ,EAAiBmB,OAAjB;EAAA,IAAuCf,OAAvC,uEAAiD,KAAjD;EAAA,OACzBC,OAAO,CAACO,IAAR,CAAa,CACXC,GAAG,CAAIb,GAAJ,EAASmB,OAAT,CADQ,EAEX,IAAId,OAAJ,CAAe,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAClCE,UAAU,CAAC,MAAM;MACfF,MAAM,CAAC,IAAII,KAAJ,CAAU,WAAV,CAAD,CAAN;IACD,CAFS,EAEPP,OAFO,CAAV;EAGD,CAJD,CAFW,CAAb,CADyB;AAAA,CAApB,C","sources":["webpack://@toruslabs/http-helpers/webpack/bootstrap","webpack://@toruslabs/http-helpers/webpack/runtime/compat get default export","webpack://@toruslabs/http-helpers/webpack/runtime/define property getters","webpack://@toruslabs/http-helpers/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/http-helpers/webpack/runtime/make namespace object","webpack://@toruslabs/http-helpers/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/http-helpers/external commonjs2 \"lodash.merge\"","webpack://@toruslabs/http-helpers/external commonjs2 \"loglevel\"","webpack://@toruslabs/http-helpers/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","/* eslint-disable @typescript-eslint/no-throw-literal */\nimport merge from \"lodash.merge\";\nimport logLevel, { levels, LogLevelDesc } from \"loglevel\";\n\nconst log = logLevel.getLogger(\"http-helpers\");\nlog.setLevel(levels.INFO);\nexport interface CustomOptions {\n  [key: string]: unknown;\n  useAPIKey?: boolean;\n  isUrlEncodedData?: boolean;\n  timeout?: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Data {}\n\nlet apiKey = \"torus-default\";\nlet embedHost = \"\";\n\n// #region API Keys\nexport const gatewayAuthHeader = \"x-api-key\";\nexport const gatewayEmbedHostHeader = \"x-embed-host\";\n\nexport function setEmbedHost(embedHost_: string): void {\n  embedHost = embedHost_;\n}\n\nexport function clearEmbedHost(): void {\n  embedHost = \"\";\n}\n\nexport function getEmbedHost(): string {\n  return embedHost;\n}\n\nexport function setAPIKey(apiKey_: string): void {\n  apiKey = apiKey_;\n}\n\nexport function clearAPIKey(): void {\n  apiKey = \"torus-default\";\n}\n\nexport function getAPIKey(): string {\n  return apiKey;\n}\n\n// #endregion\n\nexport function setLogLevel(level: LogLevelDesc) {\n  log.setLevel(level);\n}\n\nfunction getApiKeyHeaders(): Record<string, string> {\n  const headers = {};\n  if (apiKey) headers[gatewayAuthHeader] = apiKey;\n  if (embedHost) headers[gatewayEmbedHostHeader] = embedHost;\n  return headers;\n}\n\nfunction debugLogResponse(response: Response) {\n  log.info(`Response: ${response.status} ${response.statusText}`);\n  log.info(`Url: ${response.url}`);\n}\n\nexport const promiseTimeout = <T>(ms: number, promise: Promise<T>): Promise<T> => {\n  const timeout = new Promise<T>((resolve, reject) => {\n    const id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new Error(`Timed out in ${ms}ms`));\n    }, ms);\n  });\n  return Promise.race<T>([promise, timeout]);\n};\n\nexport const get = async <T>(url: string, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {},\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"GET\" });\n  const response = await fetch(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const post = <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"POST\" });\n\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n\n  return promiseTimeout<T>(\n    (customOptions.timeout as number) || 60000,\n    fetch(url, options).then((response) => {\n      if (response.ok) {\n        return response.json() as Promise<T>;\n      }\n      debugLogResponse(response);\n      throw response;\n    })\n  );\n};\n\nexport const patch = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PATCH\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const remove = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"DELETE\" });\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const generateJsonRPCObject = (method: string, parameters: unknown) => ({\n  jsonrpc: \"2.0\",\n  method,\n  id: 10,\n  params: parameters,\n});\n\nexport const promiseRace = <T>(url: string, options: RequestInit, timeout = 60000) =>\n  Promise.race([\n    get<T>(url, options),\n    new Promise<T>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error(\"timed out\"));\n      }, timeout);\n    }),\n  ]);\n"],"names":["merge","logLevel","levels","log","getLogger","setLevel","INFO","apiKey","embedHost","gatewayAuthHeader","gatewayEmbedHostHeader","setEmbedHost","embedHost_","clearEmbedHost","getEmbedHost","setAPIKey","apiKey_","clearAPIKey","getAPIKey","setLogLevel","level","getApiKeyHeaders","headers","debugLogResponse","response","info","status","statusText","url","promiseTimeout","ms","promise","timeout","Promise","resolve","reject","id","setTimeout","clearTimeout","Error","race","get","options_","customOptions","defaultOptions","mode","useAPIKey","options","method","fetch","ok","json","post","data","isUrlEncodedData","body","JSON","stringify","then","patch","remove","generateJsonRPCObject","parameters","jsonrpc","params","promiseRace"],"sourceRoot":""}